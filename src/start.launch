<launch>
	<include file="$(find bebop_driver)/launch/bebop_node.launch" />
	<arg name="marker_size" default="6.5" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
        
	<arg name="cam_image_topic" default="/bebop/image_raw" />
	<arg name="cam_info_topic" default="/bebop/camera_info" />
	        
		<arg name="output_frame" default="fixed" />
		<arg name="bundle_files" default="$(find Drone-Rescue-Mission)/src/bundles/tag0.xml $(find Drone-Rescue-Mission)/src/bundles/tag4.xml $(find Drone-Rescue-Mission)/src/bundles/tag8.xml $(find Drone-Rescue-Mission)/src/bundles/tag9.xml $(find Drone-Rescue-Mission)/src/bundles/tag11.xml $(find Drone-Rescue-Mission)/src/bundles/tag17.xml" />

	<node name="ar_track_alvar" pkg="ar_track_alvar" type="findMarkerBundlesNoKinect" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame) $(arg bundle_files)" />

	<arg name="server" default="192.168.50.11"/>

  	<node pkg="vrpn_client_ros" type="vrpn_client_node" name="vrpn_client_node" output="screen">
    <rosparam subst_value="true">
      server: $(arg server)
      port: 3883

      update_frequency: 100.0
      frame_id: world

      # Use the VRPN server's time, or the client's ROS time.
      use_server_time: false
      broadcast_tf: true

      # Must either specify refresh frequency > 0.0, or a list of trackers to create
      refresh_tracker_frequency: 1.0
      #trackers:
      #- FirstTracker
      #- SecondTracker
    </rosparam>
  </node>
</launch>
